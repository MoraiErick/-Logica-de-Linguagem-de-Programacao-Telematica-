1. A manipulação de bits é uma técnica de programação que envolve a manipulação de bits individuais dentro de um número binário. Isso pode ser feito usando operadores bitwise, que são operadores que trabalham com bits individuais.

2. A manipulação de bits é uma técnica fundamental em programação e tem uma importância significativa em várias áreas da computação. Aqui estão algumas razões pelas quais a manipulação de bits é importante:
Eficiência de memória, Velocidade de processamento, Criptografia, Compressão de dados Processamento de imagem.

3. AND bit a bit, OR bit a bit, XOR bit a bit e Deslocamento à esquerda e à direita

4. #include <stdio.h>

void exibirBits(int num) {
    int i;
    for (i = 31; i >= 0; i--) {
        printf("%d", (num >> i) & 1);
    }
    printf("\n");
}

int main() {
    int num1, num2, resultado;

    printf("Digite o primeiro número: ");
    scanf("%d", &num1);
    printf("Digite o segundo número: ");
    scanf("%d", &num2);

    printf("Bits do primeiro número: ");
    exibirBits(num1);
    printf("Bits do segundo número: ");
    exibirBits(num2);

    printf("Operações básicas:\n");

    resultado = num1 & num2;
    printf("AND (E): ");
    exibirBits(resultado);

    resultado = num1 | num2;
    printf("OR (OU): ");
    exibirBits(resultado);

    resultado = num1 ^ num2;
    printf("XOR (OU Exclusivo): ");
    exibirBits(resultado);

    resultado = ~num1;
    printf("NOT (NÃO): ");
    exibirBits(resultado);

    resultado = num1 << 2;
    printf("Deslocamento à esquerda (2 bits): ");
    exibirBits(resultado);

    resultado = num1 >> 2;
    printf("Deslocamento à direita (2 bits): ");
    exibirBits(resultado);

    return 0;
}

